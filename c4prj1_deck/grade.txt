Grading at Sat Sep 12 12:18:07 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==470== Memcheck, a memory error detector
==470== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==470== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==470== Command: ./tester act
==470== Parent PID: 469
==470== 
==470== Use of uninitialised value of size 8
==470==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==470==    by 0x404172: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==470==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==470== 
==470== Invalid write of size 8
==470==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==470==    by 0x404172: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==470==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==470==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==470== 
==470== 
==470== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==470==  Access not within mapped region at address 0x0
==470==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==470==    by 0x404172: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==470==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==470==  If you believe this happened as a result of a stack
==470==  overflow in your program's main thread (unlikely but
==470==  possible), you can try to increase the size of the
==470==  main thread stack using the --main-stacksize= flag.
==470==  The main thread stack size used in this run was 8388608.
==470== 
==470== HEAP SUMMARY:
==470==     in use at exit: 904 bytes in 58 blocks
==470==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==470== 
==470== LEAK SUMMARY:
==470==    definitely lost: 0 bytes in 0 blocks
==470==    indirectly lost: 0 bytes in 0 blocks
==470==      possibly lost: 0 bytes in 0 blocks
==470==    still reachable: 904 bytes in 58 blocks
==470==         suppressed: 0 bytes in 0 blocks
==470== Rerun with --leak-check=full to see details of leaked memory
==470== 
==470== For counts of detected and suppressed errors, rerun with: -v
==470== Use --track-origins=yes to see where uninitialised values come from
==470== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==474== Memcheck, a memory error detector
==474== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==474== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==474== Command: ./tester aec
==474== Parent PID: 473
==474== 
==474== Use of uninitialised value of size 8
==474==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x402129: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x403B9E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==474== 
==474== Invalid write of size 8
==474==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x402129: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x403B9E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==474==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==474== 
==474== 
==474== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==474==  Access not within mapped region at address 0x0
==474==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x402129: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x403B9E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==474==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==474==  If you believe this happened as a result of a stack
==474==  overflow in your program's main thread (unlikely but
==474==  possible), you can try to increase the size of the
==474==  main thread stack using the --main-stacksize= flag.
==474==  The main thread stack size used in this run was 8388608.
==474== 
==474== HEAP SUMMARY:
==474==     in use at exit: 6,936 bytes in 447 blocks
==474==   total heap usage: 455 allocs, 8 frees, 7,048 bytes allocated
==474== 
==474== LEAK SUMMARY:
==474==    definitely lost: 0 bytes in 0 blocks
==474==    indirectly lost: 0 bytes in 0 blocks
==474==      possibly lost: 0 bytes in 0 blocks
==474==    still reachable: 6,936 bytes in 447 blocks
==474==         suppressed: 0 bytes in 0 blocks
==474== Rerun with --leak-check=full to see details of leaked memory
==474== 
==474== For counts of detected and suppressed errors, rerun with: -v
==474== Use --track-origins=yes to see where uninitialised values come from
==474== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==478== Memcheck, a memory error detector
==478== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==478== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==478== Command: ./tester mde
==478== Parent PID: 477
==478== 
==478== Conditional jump or move depends on uninitialised value(s)
==478==    at 0x4C2FD0C: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==478==    by 0x4020CB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x402206: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x40385C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==478== 
==478== Conditional jump or move depends on uninitialised value(s)
==478==    at 0x4C2DB3C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==478==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==478==    by 0x4020CB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x402206: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x40385C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==478== 
==478== Use of uninitialised value of size 8
==478==    at 0x4020F0: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x402206: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x40385C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==478== 
==478== Use of uninitialised value of size 8
==478==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x402206: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x40385C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==478== 
==478== Invalid write of size 8
==478==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x402206: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x40385C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==478==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==478== 
==478== 
==478== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==478==  Access not within mapped region at address 0x0
==478==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x402206: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x40385C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==478==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==478==  If you believe this happened as a result of a stack
==478==  overflow in your program's main thread (unlikely but
==478==  possible), you can try to increase the size of the
==478==  main thread stack using the --main-stacksize= flag.
==478==  The main thread stack size used in this run was 8388608.
==478== 
==478== HEAP SUMMARY:
==478==     in use at exit: 888 bytes in 57 blocks
==478==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==478== 
==478== LEAK SUMMARY:
==478==    definitely lost: 0 bytes in 0 blocks
==478==    indirectly lost: 0 bytes in 0 blocks
==478==      possibly lost: 0 bytes in 0 blocks
==478==    still reachable: 888 bytes in 57 blocks
==478==         suppressed: 0 bytes in 0 blocks
==478== Rerun with --leak-check=full to see details of leaked memory
==478== 
==478== For counts of detected and suppressed errors, rerun with: -v
==478== Use --track-origins=yes to see where uninitialised values come from
==478== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==482== Memcheck, a memory error detector
==482== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==482== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==482== Command: ./tester brd
==482== Parent PID: 481
==482== 
==482== Use of uninitialised value of size 8
==482==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x4022A1: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x4034BC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==482== 
==482== Invalid write of size 8
==482==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x4022A1: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x4034BC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==482==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==482== 
==482== 
==482== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==482==  Access not within mapped region at address 0x0
==482==    at 0x4020F7: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x4022A1: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x4034BC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==482==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==482==  If you believe this happened as a result of a stack
==482==  overflow in your program's main thread (unlikely but
==482==  possible), you can try to increase the size of the
==482==  main thread stack using the --main-stacksize= flag.
==482==  The main thread stack size used in this run was 8388608.
==482== 
==482== HEAP SUMMARY:
==482==     in use at exit: 104 bytes in 10 blocks
==482==   total heap usage: 11 allocs, 1 frees, 4,200 bytes allocated
==482== 
==482== LEAK SUMMARY:
==482==    definitely lost: 0 bytes in 0 blocks
==482==    indirectly lost: 0 bytes in 0 blocks
==482==      possibly lost: 0 bytes in 0 blocks
==482==    still reachable: 104 bytes in 10 blocks
==482==         suppressed: 0 bytes in 0 blocks
==482== Rerun with --leak-check=full to see details of leaked memory
==482== 
==482== For counts of detected and suppressed errors, rerun with: -v
==482== Use --track-origins=yes to see where uninitialised values come from
==482== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F

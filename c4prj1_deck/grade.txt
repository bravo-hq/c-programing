Grading at Sat Sep 12 17:36:17 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
Valgrind reported errors:
==734== Memcheck, a memory error detector
==734== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==734== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==734== Command: ./tester mde
==734== Parent PID: 733
==734== 
==734== Conditional jump or move depends on uninitialised value(s)
==734==    at 0x4C2FD0C: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==734==    by 0x4020CB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==734==    by 0x402228: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==734==    by 0x40387C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==734==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==734== 
==734== 
==734== HEAP SUMMARY:
==734==     in use at exit: 0 bytes in 0 blocks
==734==   total heap usage: 2,440 allocs, 2,440 frees, 155,200 bytes allocated
==734== 
==734== All heap blocks were freed -- no leaks are possible
==734== 
==734== For counts of detected and suppressed errors, rerun with: -v
==734== Use --track-origins=yes to see where uninitialised values come from
==734== ERROR SUMMARY: 16 errors from 1 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==738== Memcheck, a memory error detector
==738== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==738== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==738== Command: ./tester brd
==738== Parent PID: 737
==738== 
==738== Invalid read of size 8
==738==    at 0x4022B2: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==738==    by 0x4034DC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==738==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==738==  Address 0x5205268 is 0 bytes after a block of size 8 alloc'd
==738==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==738==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==738==    by 0x4034A1: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==738==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==738== 
==738== Invalid read of size 8
==738==    at 0x4022B9: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==738==    by 0x4034DC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==738==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==738==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==738== 
==738== 
==738== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==738==  Access not within mapped region at address 0x0
==738==    at 0x4022B9: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==738==    by 0x4034DC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==738==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==738==  If you believe this happened as a result of a stack
==738==  overflow in your program's main thread (unlikely but
==738==  possible), you can try to increase the size of the
==738==  main thread stack using the --main-stacksize= flag.
==738==  The main thread stack size used in this run was 8388608.
==738== 
==738== HEAP SUMMARY:
==738==     in use at exit: 112 bytes in 11 blocks
==738==   total heap usage: 12 allocs, 1 frees, 4,208 bytes allocated
==738== 
==738== LEAK SUMMARY:
==738==    definitely lost: 0 bytes in 0 blocks
==738==    indirectly lost: 0 bytes in 0 blocks
==738==      possibly lost: 0 bytes in 0 blocks
==738==    still reachable: 112 bytes in 11 blocks
==738==         suppressed: 0 bytes in 0 blocks
==738== Rerun with --leak-check=full to see details of leaked memory
==738== 
==738== For counts of detected and suppressed errors, rerun with: -v
==738== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: C
